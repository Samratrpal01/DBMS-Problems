public class Solution {
    private int maxDepth = -1;
    private int bottomLeftValue = 0;

    private void DFS(TreeNode node, int depth) {
        if (node == null) return;

        if (depth > maxDepth) {
            maxDepth = depth;
            bottomLeftValue = node.val;
        }

        DFS(node.left, depth + 1);
        DFS(node.right, depth + 1);
    }

    public int FindBottomLeftValue(TreeNode root) {
        DFS(root, 0);
        return bottomLeftValue;
    }
}

//Nice way to solve the problem, this code is clean and simple. it uses only small flag to verified if value exist then no need to do any thing if get new height then value its value, mice //approach.