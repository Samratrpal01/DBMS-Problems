public class Solution {
    public string MinWindow(string s, string t) {
        int n = s.Length;
        int m = t.Length;

        if (n < m)
            return "";

        if (s == t)
            return s;

        int[] freqT = new int[256];
        int[] freqS = new int[256];

        for (int i = 0; i < m; i++) {
            freqT[t[i]]++;
        }

        int start = 0, startIndex = -1, minLen = int.MaxValue;
        int count = 0;

        for (int end = 0; end < n; end++) {
            freqS[s[end]]++;

            if (freqT[s[end]] != 0 && freqS[s[end]] <= freqT[s[end]]) {
                count++;
            }

            if (count == m) {
                while (freqT[s[start]] == 0 || freqS[s[start]] > freqT[s[start]]) {
                    if (freqS[s[start]] > freqT[s[start]]) {
                        freqS[s[start]]--;
                    }
                    start++;
                }

                int windowLen = end - start + 1;
                if (minLen > windowLen) {
                    minLen = windowLen;
                    startIndex = start;
                }
            }
        }

        if (startIndex == -1)
            return "";

        return s.Substring(startIndex, minLen);
    }
}
